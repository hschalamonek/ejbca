/*************************************************************************
 *                                                                       *
 *  EJBCA Community: The OpenSource Certificate Authority                *
 *                                                                       *
 *  This software is free software; you can redistribute it and/or       *
 *  modify it under the terms of the GNU Lesser General Public           *
 *  License as published by the Free Software Foundation; either         *
 *  version 2.1 of the License, or any later version.                    *
 *                                                                       *
 *  See terms of license at gnu.org.                                     *
 *                                                                       *
 *************************************************************************/

package org.ejbca.webtest;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import org.cesecore.authentication.tokens.AuthenticationToken;
import org.cesecore.authentication.tokens.UsernamePrincipal;
import org.cesecore.authorization.AuthorizationDeniedException;
import org.cesecore.mock.authentication.tokens.TestAlwaysAllowLocalAuthenticationToken;
import org.cesecore.util.EjbRemoteHelper;
import org.ejbca.WebTestBase;
import org.ejbca.WebTestHelper;
import org.ejbca.core.ejb.ra.raadmin.EndEntityProfileSessionRemote;
import org.ejbca.utils.WebTestUtils;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

/**
 * 
 * @version $Id$
 *
 */
@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class EcaQa99_EEPManagement extends WebTestBase {

    private static final AuthenticationToken admin = new TestAlwaysAllowLocalAuthenticationToken(new UsernamePrincipal("UserDataTest"));

    private static WebDriver webDriver;
    private static EndEntityProfileSessionRemote endEntityProfileSession = EjbRemoteHelper.INSTANCE.getRemoteSession(EndEntityProfileSessionRemote.class);

    private static final String deleteAlert = "Are you sure you want to delete this?";
    private static final String eepName = "ECAQA10-EndEntityProfile";
    private static final String eepNameClone = "TestEndEntityProfileFromTemplate";
    private static final String eepRename = "MyEndEntityProfile";

    @BeforeClass
    public static void init() {
        setUp(true, null);
        webDriver = getWebDriver();
    }

    @AfterClass
    public static void exit() throws AuthorizationDeniedException {
        endEntityProfileSession.removeEndEntityProfile(admin, eepName);
        endEntityProfileSession.removeEndEntityProfile(admin, eepNameClone);
        endEntityProfileSession.removeEndEntityProfile(admin, eepRename);
        webDriver.quit();
    }

    @Test
    public void testA_addEEP() {
        // Create EEP and enter edit mode
        WebTestHelper.goToEndEntityProfiles(webDriver, getAdminWebUrl());
        WebTestHelper.addEndEntityProfile(webDriver, eepName, true);
        WebTestHelper.editEndEntityProfile(webDriver, eepName);

        // Edit EEP and save
        webDriver.findElement(By.id("checkboxautogeneratedusername")).click();
        WebTestHelper.saveEndEntityProfile(webDriver, true);

        // Assert that the EEP exists and then enter edit mode
        WebTestHelper.assertEndEntityProfileExists(webDriver, eepName);
        WebTestHelper.editEndEntityProfile(webDriver, eepName);

        WebElement autoGenUsernameButton = webDriver.findElement(By.id("checkboxautogeneratedusername"));
        assertNotNull("'Auto-generated username' was not enabled after saving EEP", autoGenUsernameButton.getAttribute("checked"));

        // Click 'Back to End Entity Profiles' link and assert EEP still exists
        webDriver.findElement(By.xpath("//td/a[contains(@href,'editendentityprofiles.jsp')]")).click();
        assertEquals("Clicking 'Back to End Entity Profiles' link did not redirect to expected page", WebTestUtils.getUrlIgnoreDomain(webDriver.getCurrentUrl()),
                "/ejbca/adminweb/ra/editendentityprofiles/editendentityprofiles.jsp");
        WebTestHelper.assertEndEntityProfileExists(webDriver, eepName);
    }

    @Test
    public void testB_verifyAuditLog() {
        WebTestHelper.goToAuditLog(webDriver, getAdminWebUrl());
        WebTestHelper.assertAuditLogEvent(webDriver, "End Entity Profile Edit");
        WebTestHelper.assertAuditLogEvent(webDriver, "End Entity Profile Add");
    }

    @Test
    public void testC_addEEPClone() {
        WebTestHelper.goToEndEntityProfiles(webDriver, getAdminWebUrl());

        // Clone EEP
        WebTestHelper.cloneEndEntityProfile(webDriver, eepName, eepNameClone);
        WebTestHelper.assertEndEntityProfileExists(webDriver, eepNameClone);

        testB_verifyAuditLog();

        // Rename EEP
        WebTestHelper.goToEndEntityProfiles(webDriver, getAdminWebUrl());
        WebTestHelper.renameEndEntityProfile(webDriver, eepName, eepRename);

        // Check Audit Log
        WebTestHelper.goToAuditLog(webDriver, getAdminWebUrl());
        WebTestHelper.assertAuditLogEvent(webDriver, "End Entity Profile Rename");
    }

    @Test
    public void testd_removeEEP() {
        // Try to remove EEP
        WebTestHelper.goToEndEntityProfiles(webDriver, getAdminWebUrl());
        WebTestHelper.deleteEndEntityProfile(webDriver, eepRename);

        // Dismiss alert, assert that EEP still exists
        WebTestHelper.assertAlert(webDriver, deleteAlert, false);
        WebTestHelper.assertEndEntityProfileExists(webDriver, eepRename);

        // Actually delete EEP
        WebTestHelper.deleteEndEntityProfile(webDriver, eepRename);
        WebTestHelper.assertAlert(webDriver, deleteAlert, true);

        // Check Audit Log
        WebTestHelper.goToAuditLog(webDriver, getAdminWebUrl());
        WebTestHelper.assertAuditLogEvent(webDriver, "End Entity Profile Remove");
    }
}























